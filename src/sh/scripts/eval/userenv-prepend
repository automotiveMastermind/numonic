#! /usr/bin/env sh

__numonic_userenv_prepend() {
	__userenv_file="${HOME}"/.pam_environment
	__userenv_name=
	__userenv_value=
	__userenv_separator=':'

	while :; do
		case $1 in
			--help)
				man userenv-prepend
				return 0
				;;
			-s|--separator)
				__userenv_separator="${2}"
				shift
				;;
			--separator=*)
				__userenv_separator="${1#*=}"
				;;
			-dr|--dry-run)
				positional="--dry-run"
				;;
			-f|--file)
				__userenv_file="${2}"
				shift
				;;
			--file=*)
				__userenv_file="${1#*=}"
				;;
			*=*)
				__userenv_name="${1%%=*}"
				__userenv_value="${1#*=}"
				;;
			*?)
				if [ -z "${__userenv_name:-}" ]; then
					__userenv_name="${1}"
				elif [ -z "${__userenv_value:-}" ]; then
					__userenv_value="${1}"
				else
					print-fail "userenv-prepend: too many arguments, argument: ${1} is unexpected"
					man userenv-append | cat 1>&2
					return 1
				fi
				;;
			*)
				break
				;;
		esac
		shift
	done

	if [ -z "${__userenv_name}" ]; then
		print-fail 'userenv-prepend: a name must be specified'
		man userenv-prepend | cat 1>&2
		return 1
	fi

	if [ -z "${__userenv_value}" ]; then
		print-fail 'userenv-prepend: a value must be specified'
		man userenv-prepend | cat 1>&2
		return 1
	fi

	current=$(userenv get "${__userenv_name}" --file="${__userenv_file}" 2>/dev/null || printf '')

	if [ -n "${current:-}" ]; then
		__userenv_value="${__userenv_value}${__userenv_separator}${current}"
	fi

	userenv set "${__userenv_name}"="${__userenv_value}" --file="${__userenv_file}" ${positional:-}
}
