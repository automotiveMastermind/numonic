#! /usr/bin/env sh

__numonic_userenv_set() {
	__userenv_file="${HOME}"/.pam_environment
	__userenv_name=
	__userenv_value=

	while :; do
		case $1 in
			-h|--help)
				man userenv-set
				return 0
				;;
			-dr|--dry-run)
				positional="--dry-run"
				;;
			-f|--file)
				__userenv_file="${2}"
				shift
				;;
			--file=*)
				__userenv_file="${1#*=}"
				;;
			*=*)
				__userenv_name="${1%%=*}"
				__userenv_value="${1#*=}"
				;;
			*?)
				if [ -z "${__userenv_name:-}" ]; then
					__userenv_name="${1}"
				elif [ -z "${__userenv_value:-}" ]; then
					__userenv_value="${1}"
				else
					print-fail "userenv set: too many arguments, argument: ${1} is unexpected"
					man userenv-set | cat 1>&2
					return 1
				fi
				;;
			*)
				break
				;;
		esac
		shift
	done

	if [ -z "${__userenv_name}" ]; then
		print-fail 'userenv set: a name must be specified'
		man userenv-set | cat 1>&2
		return 1
	fi

	if [ -z "${__userenv_value}" ]; then
		print-fail 'userenv set: a value must be specified'
		man userenv-set | cat 1>&2
		return 1
	fi

	if [ ! -f "${__userenv_file}" ]; then
		touch "${__userenv_file}"
	fi

	set -- "${__userenv_name}"="${__userenv_value}" --file="${__userenv_file}" ${positional:-}

	if grep "^${__userenv_name}=" "${__userenv_file}" 1>/dev/null 2>&1; then
		userenv replace "$@"
		return $?
	fi

	userenv add "$@"
}
